import { CommandInstanceInfo, CommandLineInputs, CommandLineOptions, ProjectIntegration } from '../../definitions';
import { Command } from '../../lib/command';
import { CapacitorConfig } from '../../lib/integrations/capacitor/config';
export declare abstract class CapacitorCommand extends Command {
    private _integration?;
    get integration(): Required<ProjectIntegration>;
    getCapacitorConfig(): CapacitorConfig;
    checkCapacitor(runinfo: CommandInstanceInfo): Promise<void>;
    preRunChecks(runinfo: CommandInstanceInfo): Promise<void>;
    runCapacitor(argList: string[]): Promise<void>;
    runBuild(inputs: CommandLineInputs, options: CommandLineOptions): Promise<void>;
    checkForPlatformInstallation(platform: string): Promise<void>;
    private promptToInstallCapacitor;
    private _runCapacitor;
}
